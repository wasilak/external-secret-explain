name: Rust CI

on:
  push:
    branches: [main]
    tags:
      - "*"
    paths-ignore:
      - "charts/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "charts/**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64, aarch64]
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            rust_target: aarch64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust_target }}

      - name: Build executable
        run: |
          mkdir -p ./dist
          cargo build --release --target ${{ matrix.rust_target }}
          mv target/${{ matrix.rust_target }}/release/${{ github.event.repository.name }} ./dist/${{ github.event.repository.name }}-${{ matrix.os }}-${{ matrix.arch }}

      - name: Run tests
        run: cargo test --verbose --target ${{ matrix.rust_target }}

      - name: Compress executable
        run: |
          cd ./dist
          chmod +x ${{ github.event.repository.name }}-${{ matrix.os }}-${{ matrix.arch }}
          zip ${{ github.event.repository.name }}-${{ matrix.os }}-${{ matrix.arch }}.zip ${{ github.event.repository.name }}-${{ matrix.os }}-${{ matrix.arch }}
          ls -lha .

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          repository: ${{ github.repository }}
          files: |
            dist/${{ github.event.repository.name }}-*.zip
